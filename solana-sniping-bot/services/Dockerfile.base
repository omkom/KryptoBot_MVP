# Base Dockerfile for all services
FROM node:18-alpine AS base

# Set working directory
WORKDIR /usr/src/app

# Install common dependencies
RUN apk add --no-cache \
    tzdata \
    curl

# Create directories
RUN mkdir -p ./shared ./service/src ./logs/errors ./logs/transactions

# Add production dependencies stage
FROM base AS deps

# Copy package files for the shared modules
COPY ../shared/package.json ./shared/

# Install shared dependencies
WORKDIR /usr/src/app/shared
RUN npm install --only=production
WORKDIR /usr/src/app

# Development stage with all dependencies
FROM deps AS dev

# Install development dependencies for shared
WORKDIR /usr/src/app/shared
RUN npm install
WORKDIR /usr/src/app

# Copy shared code for development
COPY ../shared ./shared/

# Production stage
FROM deps AS prod

# Copy shared code
COPY ../shared ./shared/

# Set up NODE_PATH to allow easier imports
ENV NODE_PATH=/usr/src/app

# Add a health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT:-3000}/health || exit 1