# Base image for Solana Memecoin Sniping Bot services
# This multi-stage build pattern optimizes image size and layer caching

# Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /build

# Install build dependencies
RUN apk add --no-cache --virtual .build-deps \
    python3 \
    make \
    g++ \
    git

# Copy package files first (for better layer caching)
COPY shared/package*.json ./shared/
COPY services/*/package*.json ./

# Install shared dependencies first
WORKDIR /build/shared
RUN npm ci --only=production

# Final stage
FROM node:18-alpine

# Set environment variables
ENV NODE_ENV=production \
    NODE_PATH=/usr/src/app \
    TZ=UTC

# Install production dependencies
RUN apk add --no-cache \
    tzdata \
    curl \
    bash \
    tini

# Create non-root user for security
RUN addgroup -g 1001 -S solbot && \
    adduser -u 1001 -S solbot -G solbot

# Set working directory
WORKDIR /usr/src/app

# Create necessary directories with proper permissions
RUN mkdir -p \
    ./shared \
    ./service/src \
    ./logs/errors \
    ./logs/transactions && \
    chown -R solbot:solbot /usr/src/app

# Copy from builder stage
COPY --from=builder --chown=solbot:solbot /build/shared/node_modules ./shared/node_modules

# Use tini as entrypoint for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Switch to non-root user
USER solbot

# Default command (overridden by service-specific Dockerfiles)
CMD ["node", "service/src/index.js"]