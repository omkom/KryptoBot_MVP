services:
  redis:
    image: redis:7-alpine
    container_name: redis_sniper
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - sniper-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  lp-monitor:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        - SERVICE_NAME=lp-monitor
        - NODE_VERSION=18
    container_name: lp_monitor_sniper
    restart: unless-stopped
    networks:
      - sniper-net
    volumes:
      - ./logs:/usr/src/app/logs
    env_file:
      - .env
    environment:
      - NODE_PATH=/usr/src/app
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M

  token-filter:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        - SERVICE_NAME=token-filter
        - NODE_VERSION=18
    container_name: token_filter_sniper
    restart: unless-stopped
    networks:
      - sniper-net
    volumes:
      - ./logs:/usr/src/app/logs
    env_file:
      - .env
    environment:
      - NODE_PATH=/usr/src/app
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M

  buy-executor:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        - SERVICE_NAME=buy-executor
        - NODE_VERSION=18
    container_name: buy_executor_sniper
    restart: unless-stopped
    networks:
      - sniper-net
    volumes:
      - ./logs:/usr/src/app/logs
    env_file:
      - .env
    environment:
      - NODE_PATH=/usr/src/app
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M

  sell-manager:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        - SERVICE_NAME=sell-manager
        - NODE_VERSION=18
    container_name: sell_manager_sniper
    restart: unless-stopped
    networks:
      - sniper-net
    volumes:
      - ./logs:/usr/src/app/logs
    env_file:
      - .env
    environment:
      - NODE_PATH=/usr/src/app
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
      
  api-server:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        - SERVICE_NAME=api-server
        - NODE_VERSION=18
    container_name: api_server_sniper
    restart: unless-stopped
    networks:
      - sniper-net
    volumes:
      - ./logs:/usr/src/app/logs
    env_file:
      - .env
    environment:
      - NODE_PATH=/usr/src/app
    ports:
      - "3000:3000"
    depends_on:
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  sniper-net:
    driver: bridge

volumes:
  redis_data:
    driver: local